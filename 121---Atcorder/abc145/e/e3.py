input = open('input.txt','r').readline

N = int(input())
*P, = map(int, input().split())

LL = [0] + [i for i in range(N+1)]
RR = [i+1 for i in range(N+1)] + [N+1]

#------------------------------------------------------
# enumerate() : for文と使うことで、インデックスを取得できる
# 
#       P = [alpha, beta, gamma]
# 
#       for i, name in enumerate(P):
#           print(i, name)
# 
#       >>> 1, alpha
#           2, beta
#           3, gamma
#
#------------------------------------------------------
E = [(v, i+1) for i, v in enumerate(P)]

#--------------
# sort()
#------------------------------------------------------
#  複数要素のリストをソートするとき
#  [(a1,b1), (a2,b2)]
#  例えば上記のリストであれば "a" によって昇順、降順が決まる。
#------------------------------------------------------

# 今回は大きい数字を探すので、P[x](=E[x])が小さい順に数えることにする。
E.sort()
ans = 0
for v, i in E:
    l0 = LL[i]; l1 = LL[l0]    
    r0 = RR[i]; r1 = RR[r0]
    
    # 今回小さい順に処理しているため、
    # 今回のような大きい数字を探す処理において、
    # iで処理した数字はすでに次の数にとって無視できるものである。
    # よって、LL,RRにそれを記録することで、隣の数字ではなく、
    # 次の数字を参照するように、値を記録する
    LL[r0], RR[l0] = l0, r0
    

#   ans += ((r1 - r0) * (i - l0) + (r0 - i) * (l0 - l1)) * v

    # l0 <  i <= r0 <  r1 の場合の組み合わせ
    a = (r1 - r0) * (i - l0)
    # l1 < l0 <= i  <= r0 の場合の組み合わせ
    b = (r0 - i) * (l0 - l1)
    # v　が二番目となる組み合わせ　文意から、vをかける。
    ans += (a + b)*v
print(ans)
